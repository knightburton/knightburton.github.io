{"version":3,"sources":["public/images/style-logo-160x160.png","serviceWorker.js","components/home/home.component.js","components/about/about.component.js","constants/index.js","components/footer/footer.component.js","components/App.js","side.effects/fontawesome.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","Container","className","id","fluid","Row","Col","Image","src","logo","alt","style","height","href","target","React","PureComponent","About","xs","md","span","offset","links","key","icon","text","url","Footer","noGutters","map","link","title","width","r","cx","cy","stopColor","App","faLinkedin","faFacebook","faTwitter","faInstagram","faTwitch","faGithub","faStackOverflow","faCopyright","faPlayCircle","faDesktop","faLaptop","faTablet","faMobile","faGlobe","library","add","icons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc72650b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style-logo-160x160.378be976.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport logo from '../../public/images/style-logo-160x160.png';\n\nexport default class Home extends React.PureComponent {\n  render() {\n    return (\n      <Container className=\"border-bottom py-5\" id=\"home\" fluid>\n        <Row>\n          <Col className=\"text-center\">\n            <div className=\"d-flex flex-row justify-content-center\">\n              <Image fluid src={logo} alt=\"logo\" style={{ height: '76px' }} />\n              <div className=\"mt-1 ml-3\">\n                <h2 className=\"display-4 font-weight-bold mb-0\">Imre Kiss</h2>\n                <p className=\"text-muted text-left ml-1 mt-n2\">\n                  <span>JavaScript Developer at </span>\n                  <a href=\"https://jaystack.com/\" target=\"blank\">JayStack</a>\n                </p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center font-italic\">\n            <p className=\"mb-0\">\"Never ignore coincidence. Unless, of course, you&apos;re busy. In which case, always ignore coincidence.\"</p>\n            <p className=\"text-muted\">The Doctor</p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default class About extends React.PureComponent {\n  render() {\n    return (\n      <Container className=\"text-center py-5\">\n        <Row>\n          <Col xs={12} md={{ span: 6, offset: 3 }}>\n            <p>\n              Hi, nice to meet you! I'm a passionate programmer-computer-tech guy.\n            </p>\n            <p>\n              I always played with tools that can do something with a few lines of code and electricity.\n              I enjoy to create something that makes me happy and makes others happy as well on the other side of the screen.\n              I've wokred with microcontrollers, PICs and self made stuffs, also used a few programming language on my journey.\n            </p>\n            <p>\n              My favourite and most used language is JavaScript, but I know how to code in C, C++, PHP, Java, Python and so on...\n              The point is, I love coding.\n              Correspong to this, I've finished a few school which related to programming or electricity\n              and my highest degree of training is a BSC degree (Software Engineering).\n            </p>\n            <p>\n              In the past, I've worked as a freelancer for a short time and then I've spent 2 and a half year as a\n              at the University of Szeged Department of Software Engineering as a Software Developer.\n              Currently, I am working at JayStack as a Javascript Developer.\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"pt-5\">\n          <Col xs={12} md={{ span: 6, offset: 3 }}>\n            <p>\n              If you have any question or whatever, just find me on the Interwebs down below.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","export const links = [\n  { key: 'linkedin', icon: 'linkedin', text: 'LinkedIn', url: 'https://www.linkedin.com/in/imre-kiss-8b7778140/' },\n  { key: 'facebook', icon: 'facebook', text: 'Facebook', url: 'https://www.facebook.com/imre.kiss.777' },\n  { key: 'twitter', icon: 'twitter', text: 'Twitter', url: 'https://twitter.com/KnightBurton' },\n  { key: 'instagram', icon: 'instagram', text: 'Instagram', url: 'https://www.instagram.com/knightburton/' },\n  { key: 'twitch', icon: 'twitch', text: 'Twitch.tv', url: 'https://www.twitch.tv/knightburton' },\n  { key: 'github', icon: 'github', text: 'GitHub', url: 'https://github.com/knightburton' },\n  { key: 'stackoverflow', icon: 'stack-overflow', text: 'Stack Overflow', url: 'https://stackoverflow.com/users/11165292/knightburton' }\n];\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { links } from '../../constants';\n\nexport default class Footer extends React.PureComponent {\n  render() {\n    return (\n      <footer className=\"border-top py-3 bg-light\">\n        <Container fluid>\n          <Row noGutters>\n            <Col className=\"text-center my-3\">\n              {links.map(link => (\n                <a key={link.key} target=\"_target\" href={link.url} className={`mx-2 h3 icon-color-${link.key}`} title={link.text}>\n                  {link.key === 'instagram' &&\n                    <svg width=\"0\" height=\"0\">\n                      <radialGradient id=\"svg-instagram\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n                        <stop stopColor=\"#fdf497\" offset=\"0\" />\n                        <stop stopColor=\"#fdf497\" offset=\"0.05\" />\n                        <stop stopColor=\"#fd5949\" offset=\"0.45\" />\n                        <stop stopColor=\"#d6249f\" offset=\"0.6\" />\n                        <stop stopColor=\"#285AEB\" offset=\"0.9\" />\n                      </radialGradient>\n                    </svg>\n                  }\n                  <FontAwesomeIcon icon={['fab', link.icon]} className={`icon-color-${link.key}`} />\n                </a>\n              ))}\n            </Col>\n          </Row>\n        </Container>\n        <p className=\"text-center text-muted mt-2\">\n          <FontAwesomeIcon icon=\"copyright\" />\n          <span> Copyright 2019 | KnightBurton</span>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React from 'react';\n\nimport Home from './home/home.component';\nimport About from './about/about.component';\nimport Footer from './footer/footer.component';\n\nclass App extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <Home />\n        <About />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n  faLinkedin,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n  faTwitch,\n  faGithub,\n  faStackOverflow\n} from '@fortawesome/free-brands-svg-icons';\nimport {\n  faCopyright,\n  faPlayCircle,\n  faDesktop,\n  faLaptop,\n  faTablet,\n  faMobile,\n  faGlobe\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default [\n  // brands\n  faLinkedin,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n  faTwitch,\n  faGithub,\n  faStackOverflow,\n  //solid\n  faCopyright,\n  faPlayCircle,\n  faDesktop,\n  faLaptop,\n  faTablet,\n  faMobile,\n  faGlobe\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport icons from './side.effects/fontawesome';\n\nimport 'typeface-roboto';\nimport './index.scss';\n\nlibrary.add(...icons);\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}